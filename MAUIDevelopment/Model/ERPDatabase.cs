// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using MAUIDevelopment.Model.Types;

namespace MAUIDevelopment.Model
{
    public partial class ERPDatabase : DbContext
    {
        private readonly string ConnectionString;
        public ERPDatabase(string _cs)
        {
            ConnectionString = _cs;
        }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(this.ConnectionString);
            }
        }

        public ERPDatabase(DbContextOptions<ERPDatabase> options)
            : base(options)
        {
        }

        public virtual DbSet<artikal_dnevnik> artikal_dnevnik { get; set; }
        public virtual DbSet<artikal_dokument> artikal_dokument { get; set; }
        public virtual DbSet<artikal_vrsta> artikal_vrsta { get; set; }
        public virtual DbSet<dokument_vrsta> dokument_vrsta { get; set; }
        public virtual DbSet<fiscal_dokument> fiscal_dokument { get; set; }
        public virtual DbSet<fiscal_enu> fiscal_enu { get; set; }
        public virtual DbSet<partner> partner { get; set; }



        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Serbian_Latin_100_CI_AS");

            modelBuilder.Entity<artikal_dnevnik>(entity =>
            {
                entity.HasKey(e => e.id_dnevnik);

                entity.Property(e => e.bruto_tezina).HasColumnType("decimal(25, 10)");

                entity.Property(e => e.cijena_nab).HasColumnType("decimal(25, 10)");

                entity.Property(e => e.cijena_pro).HasColumnType("decimal(25, 10)");

                entity.Property(e => e.cijena_pro2).HasColumnType("decimal(25, 10)");

                entity.Property(e => e.cijena_val).HasColumnType("decimal(25, 10)");

                entity.Property(e => e.duzina).HasColumnType("decimal(14, 4)");

                entity.Property(e => e.id_lot).HasMaxLength(20);

                entity.Property(e => e.jedinica).HasMaxLength(5);

                entity.Property(e => e.kol).HasColumnType("decimal(14, 4)");

                entity.Property(e => e.kol_pom).HasColumnType("decimal(14, 4)");

                entity.Property(e => e.multiply).HasDefaultValueSql("((1))");

                entity.Property(e => e.napomena).HasMaxLength(300);

                entity.Property(e => e.neto_tezina).HasColumnType("decimal(25, 10)");

                entity.Property(e => e.opis).HasMaxLength(500);

                entity.Property(e => e.popust)
                    .HasColumnType("decimal(6, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.popust_akc).HasColumnType("decimal(6, 3)");

                entity.Property(e => e.sirina).HasColumnType("decimal(14, 4)");

                entity.Property(e => e.visina).HasColumnType("decimal(14, 4)");

                entity.Property(e => e.vr_ztn)
                    .HasColumnType("decimal(25, 10)")
                    .HasDefaultValueSql("((0))");

                entity.HasOne(d => d.id_dokumentNavigation)
                    .WithMany(p => p.artikal_dnevnik)
                    .HasForeignKey(d => d.id_dokument)
                    .HasConstraintName("FK_artikal_dnevnik_artikal_dokument");

                entity.HasOne(d => d.id_relatedNavigation)
                    .WithMany(p => p.Inverseid_relatedNavigation)
                    .HasForeignKey(d => d.id_related)
                    .HasConstraintName("FK_artikal_dnevnik_artikal_dnevnik");
            });

            modelBuilder.Entity<artikal_dokument>(entity =>
            {
                entity.HasKey(e => e.id_dokument);

                entity.Property(e => e.broj_dok)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.created)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.datum).HasColumnType("date");

                entity.Property(e => e.datum_fak).HasColumnType("date");

                entity.Property(e => e.datum_val).HasColumnType("date");

                entity.Property(e => e.finalized).HasColumnType("datetime");

                entity.Property(e => e.mjesto_created).HasMaxLength(15);

                entity.Property(e => e.napomena).HasColumnType("text");

                entity.Property(e => e.op_create).HasMaxLength(100);

                entity.Property(e => e.op_finalize).HasMaxLength(100);

                entity.Property(e => e.op_update).HasMaxLength(100);

                entity.Property(e => e.updated).HasColumnType("datetime");

                entity.Property(e => e.valuta)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ztn_car)
                    .HasColumnType("decimal(5, 2)")
                    .HasDefaultValueSql("((100))");

                entity.Property(e => e.ztn_man).HasColumnType("decimal(5, 2)");

                entity.Property(e => e.ztn_ost).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ztn_tra).HasColumnType("decimal(5, 2)");

                entity.HasOne(d => d.id_fiscalNavigation)
                    .WithMany(p => p.artikal_dokument)
                    .HasForeignKey(d => d.id_fiscal)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK_artikal_dokument_fiscal_dokument");

                entity.HasOne(d => d.id_partnerNavigation)
                    .WithMany(p => p.artikal_dokument)
                    .HasForeignKey(d => d.id_partner)
                    .HasConstraintName("FK_artikal_dokument_partner");

                entity.HasOne(d => d.id_vrstaNavigation)
                    .WithMany(p => p.artikal_dokument)
                    .HasForeignKey(d => d.id_vrsta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_artikal_dokument_dokument_vrsta");
            });

            modelBuilder.Entity<artikal_vrsta>(entity =>
            {
                entity.HasKey(e => e.vrsta)
                    .HasName("PK_artikl_vrsta");

                entity.Property(e => e.vrsta)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.naziv)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.opis).HasColumnType("text");
            });

            modelBuilder.Entity<dokument_vrsta>(entity =>
            {
                entity.HasKey(e => e.id_vrsta);

                entity.HasIndex(e => e.skraceni, "IX_dokument_vrsta")
                    .IsUnique()
                    .HasFillFactor(85);

                entity.Property(e => e.id_vrsta).ValueGeneratedOnAdd();

                entity.Property(e => e.naziv)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.opis).HasMaxLength(100);

                entity.Property(e => e.skraceni)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<fiscal_dokument>(entity =>
            {
                entity.HasKey(e => e.id_fiscal);

                entity.HasIndex(e => e.issue_datetime, "IX_fiscal_dokument")
                    .HasFillFactor(85);

                entity.Property(e => e.enu_br).HasMaxLength(50);

                entity.Property(e => e.externi).HasDefaultValueSql("('false')");

                entity.Property(e => e.ikof).HasMaxLength(32);

                entity.Property(e => e.issue_datetime).HasColumnType("datetime");

                entity.Property(e => e.jikr).HasMaxLength(36);

                entity.Property(e => e.opcode).HasMaxLength(10);

                entity.Property(e => e.status_code).HasMaxLength(10);

                entity.Property(e => e.tip)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.HasOne(d => d.id_vezaNavigation)
                    .WithMany(p => p.Inverseid_vezaNavigation)
                    .HasForeignKey(d => d.id_veza)
                    .HasConstraintName("FK_fiscal_dokument_fiscal_dokument");
            });

            modelBuilder.Entity<fiscal_enu>(entity =>
            {
                entity.HasKey(e => e.id_enu);

                entity.Property(e => e.broj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.broj_enu).HasMaxLength(10);

                entity.Property(e => e.kod_odrzavaoca).HasMaxLength(25);

                entity.Property(e => e.kod_poslovnog)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.naziv).HasMaxLength(100);
            });

            modelBuilder.Entity<partner>(entity =>
            {
                entity.HasKey(e => e.id_partner);

                entity.Property(e => e.adresa).HasMaxLength(100);

                entity.Property(e => e.created)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.dob_finlim).HasColumnType("money");

                entity.Property(e => e.email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.fax)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.fin_limit).HasColumnType("money");

                entity.Property(e => e.grad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.hod).HasMaxLength(100);

                entity.Property(e => e.id_cijenovnik).HasMaxLength(5);

                entity.Property(e => e.is_active)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.kontakt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.latitude).HasColumnType("decimal(12, 8)");

                entity.Property(e => e.longitude).HasColumnType("decimal(12, 8)");

                entity.Property(e => e.maticni)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.napomena).HasMaxLength(300);

                entity.Property(e => e.naziv)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.pdv)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.postanski_broj).HasMaxLength(50);

                entity.Property(e => e.potrazivanje_limit).HasColumnType("money");

                entity.Property(e => e.provizija_procenat).HasColumnType("money");

                entity.Property(e => e.rabat).HasColumnType("decimal(3, 1)");

                entity.Property(e => e.sifra).HasMaxLength(50);

                entity.Property(e => e.tel)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.uid_created).HasColumnType("datetime");

                entity.Property(e => e.uid_sync).HasComputedColumnSql("(CONVERT([bit],(1),0))", false);

                entity.Property(e => e.uid_updated).HasColumnType("datetime");

                entity.Property(e => e.ulica_broj).HasMaxLength(50);

                entity.Property(e => e.updated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.id_parentNavigation)
                    .WithMany(p => p.Inverseid_parentNavigation)
                    .HasForeignKey(d => d.id_parent)
                    .HasConstraintName("FK_partner_partner");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}